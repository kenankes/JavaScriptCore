We can use JavaScript in Web Development, GameDev (Unity) and also in mobile app development (Apache Cordova).
For large scaled business applications, there is a superset of JS which is called TypeScript.
JS can also be used to create full-fledged applications for Windows and Mac desktops via Electron.
You can create web servers, web APIs and other services using Node.js.
JS is a multiplatform language !

========================================================

You need to install npm in your directory. To do so => run "npm init --yes" in command. This will create a package.json file. You can add ->
"scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "lite-server"
  },
 "devDependencies": {
    "lite-server": "^2.6.1"
  }
    to your json file. Then run "npm install". This is necessary to execute your script.

To run the npm lite server, tap "npm run start" on terminal

========================================================

You can write your JavaScript code directly in your html file by adding <script> ... </script> inside the <body>. However, it is better
to keep the JavaScript code inside its own file (.js).

To load an external script into your html -> "<script src="./filename.js"></script>" 
The "./" represent the directory where the index.html file is located.

========================================================

We can also create another JavaScript file and add it to the index.html, for example to store functions..

See utils.js -> You can modify textContent by ID. To do so, in index.html you should add an ID to the components in the html file.

To detect the runtime errors, go to the browser, right click on the page then Inspect. Under the console tab, you will see your errors if there are any.


========================================================

DECLARING VARIABLES

to declare vairables, we use "let" keyword. Then we put the name of the variable.

========================================================

IF CONDITION !!!

Double Equals (==) checks for value equality only. It inherently does type coercion. This means that before checking the values, it converts the types of the variables to match each other.
On the other hand, Triple Equals (===) does not perform type coercion. It will verify whether the variables being compared have both the same value AND the same type.